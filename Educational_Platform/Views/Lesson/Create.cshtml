@model LessonViewModel
@{
    ViewData["Title"] = "Create Lesson";
    Layout = "~/Views/Shared/instructorLayout.cshtml";
    var courses = new SelectList(ViewBag.Courses, "ID", "Title");
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-sm my-4">
                <div class="card-header bg-primary text-white py-3">
                    <h3 class="mb-0 text-center"><i class="fas fa-book me-2"></i>Create New Lesson</h3>
                </div>
                <div class="card-body p-4">
                    <form asp-action="Create" method="post" class="needs-validation" novalidate enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger mb-4"></div>

                        <!-- Title -->
                        <div class="mb-4">
                            <label asp-for="Title" class="form-label required">Title</label>
                            <input asp-for="Title" class="form-control" placeholder="Enter Lesson title" required />
                            <span asp-validation-for="Title" class="text-danger small"></span>
                        </div>

                        <!-- Supporting Files -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">Supporting Files</label>
                            <div class="file-upload-wrapper">
                                <input type="file" asp-for="Files" class="form-control"
                                       accept=".pdf,.doc,.docx,.ppt,.pptx,.xls,.xlsx,.txt,.zip" />
                                <div class="form-text">Accepted formats: PDF, Word, Excel, PowerPoint, Text, ZIP (Max 10MB)</div>
                                <span asp-validation-for="Files" class="text-danger small"></span>
                            </div>
                        </div>

                        <!-- Task Files -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">Task File</label>
                            <div class="file-upload-wrapper">
                                <input type="file" asp-for="TaskFile" class="form-control"
                                       accept=".pdf,.doc,.docx,.ppt,.pptx,.xls,.xlsx,.txt,.zip" />
                                <div class="form-text">Accepted formats: PDF, Word, Excel, PowerPoint, Text, ZIP (Max 10MB)</div>
                                <span asp-validation-for="TaskFile" class="text-danger small"></span>
                            </div>
                        </div>

                        <!-- Video Upload -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">Video File</label>
                            <div class="file-upload-wrapper">
                                <input type="file" asp-for="videoFile" class="form-control"
                                       accept="video/*,.mp4,.mov,.avi,.wmv" />
                                <div class="form-text">Accepted formats: MP4, MOV, AVI, WMV (Max 50MB)</div>
                                <span asp-validation-for="videoFile" class="text-danger small"></span>
                            </div>
                        </div>

                        <!-- Schedule Date -->
                        <div class="mb-4">
                            <label asp-for="Create_date" class="form-label">Schedule Date</label>
                            <input asp-for="Create_date" type="datetime-local" class="form-control" />
                            <span asp-validation-for="Create_date" class="text-danger small"></span>
                        </div>

                        <!-- Course Selection -->
                        <div class="form-group mb-4">
                            <label asp-for="CourseID" class="control-label">Course</label>
                            <select asp-for="CourseID" class="form-control" asp-items="courses">
                                <option value="">-- Select a Course --</option>
                            </select>
                            <span asp-validation-for="CourseID" class="text-danger"></span>
                        </div>

                        <!-- Form Buttons -->
                        <div class="d-grid gap-2 d-md-flex justify-content-md-between">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-plus-circle me-2"></i>Create Lesson
                            </button>
                            <a asp-action="Index" class="btn btn-secondary btn-lg">
                                <i class="fas fa-arrow-left me-2"></i>Back to Lessons
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Client-side validation for file sizes
        document.querySelector('form').addEventListener('submit', function(e) {
            const videoFile = document.querySelector('input[type="file"][name="videoFile"]');
            const supportingFiles = document.querySelector('input[type="file"][name="Files"]');
            const taskFile = document.querySelector('input[type="file"][name="TaskFile"]');

            // Video file size validation (max 50MB)
            if(videoFile.files.length > 0 && videoFile.files[0].size > 50 * 1024 * 1024) {
                alert('Video file size must be less than 50MB');
                e.preventDefault();
                return false;
            }

            // Supporting files size validation (max 10MB each)
            if(supportingFiles.files.length > 0) {
                for(let file of supportingFiles.files) {
                    if(file.size > 10 * 1024 * 1024) {
                        alert('Supporting files must be less than 10MB each');
                        e.preventDefault();
                        return false;
                    }
                }
            }

            // Task file size validation (max 10MB)
            if(taskFile.files.length > 0 && taskFile.files[0].size > 10 * 1024 * 1024) {
                alert('Task file size must be less than 10MB');
                e.preventDefault();
                return false;
            }

            return true;
        });
    </script>
}

<style>
    .required:after {
        content: " *";
        color: red;
    }

    .file-upload-wrapper {
        margin-bottom: 1rem;
    }

    .form-text {
        font-size: 0.875rem;
        color: #6c757d;
    }
</style>