@model RevisionModelView
@{
    ViewData["Title"] = "Edit Revision";
    Layout = "~/Views/Shared/instructorLayout.cshtml";
    var courses = new SelectList(ViewBag.Courses, "ID", "Title");
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-white py-3">
                    <h3 class="mb-0 text-center"><i class="fas fa-book me-2"></i>Edit Revision: @Model.Title</h3>
                </div>
                <div class="card-body p-4">
                    <form asp-action="Edit" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                        <input type="hidden" asp-for="ID" />
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger mb-4"></div>

                        <!-- Title Field -->
                        <div class="mb-4">
                            <label asp-for="Title" class="form-label fw-bold required">Revision Title</label>
                            <input asp-for="Title" class="form-control" placeholder="Enter revision title" required />
                            <div class="invalid-feedback">Please provide a title.</div>
                            <span asp-validation-for="Title" class="text-danger small"></span>
                        </div>

                        <!-- File Upload -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">Supporting Files</label>
                            <div class="file-upload-wrapper">
                                <input type="file" asp-for="File" class="form-control" />
                                @if (!string.IsNullOrEmpty(Model.Files))
                                {
                                    <div class="mt-2">
                                        <small class="text-muted">Current file:</small>
                                        <a href="@Model.Files" target="_blank" class="d-block">
                                            <i class="fas fa-file me-1"></i> @System.IO.Path.GetFileName(Model.Files)
                                        </a>
                                    </div>
                                }
                                <span asp-validation-for="File" class="text-danger small"></span>
                            </div>
                        </div>

                        <!-- Video Upload -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">Video File</label>
                            <div class="file-upload-wrapper">
                                <input type="file" asp-for="VideoFile" class="form-control" />
                                @if (!string.IsNullOrEmpty(Model.Video))
                                {
                                    <div class="mt-2">
                                        <small class="text-muted">Current video:</small>
                                        <a href="@Model.Video" target="_blank" class="d-block">
                                            <i class="fas fa-video me-1"></i> @System.IO.Path.GetFileName(Model.Video)
                                        </a>
                                    </div>
                                }
                                <span asp-validation-for="VideoFile" class="text-danger small"></span>
                            </div>
                        </div>

                        <!-- Schedule Date -->
                        <div class="mb-4">
                            <label asp-for="ScheduleDate" class="form-label fw-bold required">Schedule Date & Time</label>
                            <input asp-for="ScheduleDate" type="datetime-local" class="form-control" required />
                            <div class="invalid-feedback">Please select a date and time.</div>
                            <span asp-validation-for="ScheduleDate" class="text-danger small"></span>
                        </div>

                        <!-- Course Selection -->
                        <div class="mb-4">
                            <label asp-for="CourseID" class="form-label fw-bold required">Associated Course</label>
                            <select asp-for="CourseID" asp-items="courses" class="form-select" required>
                                <option value="">-- Select Course --</option>
                            </select>
                            <div class="invalid-feedback">Please select a course.</div>
                            <span asp-validation-for="CourseID" class="text-danger small"></span>
                        </div>

                        <!-- Form Actions -->
                        <div class="d-flex justify-content-end mt-5 pt-3 border-top">
                            <a asp-action="Index" class="btn btn-outline-secondary me-3">
                                <i class="fas fa-times me-1"></i>Cancel
                            </a>
                            <button type="submit" class="btn btn-primary px-4">
                                <i class="fas fa-save me-1"></i>Update Revision
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            // Initialize Bootstrap validation
            (function() {
                'use strict';
                const forms = document.querySelectorAll('.needs-validation');

                Array.prototype.slice.call(forms)
                    .forEach(function(form) {
                        form.addEventListener('submit', function(event) {
                            if (!form.checkValidity()) {
                                event.preventDefault();
                                event.stopPropagation();
                            }
                            form.classList.add('was-validated');
                        }, false);
                    });
            })();

            // Set default datetime to current value if empty
            const datetimeInput = document.getElementById('ScheduleDate');
            if (datetimeInput && !datetimeInput.value) {
                const now = new Date();
                const timezoneOffset = now.getTimezoneOffset() * 60000;
                const localISOTime = new Date(now - timezoneOffset).toISOString().slice(0, 16);
                datetimeInput.value = localISOTime;
            }

            // File input change handlers
            $('input[type="file"]').change(function() {
                const fileName = $(this).val().split('\\').pop();
                if (fileName) {
                    $(this).next('.invalid-feedback').before(
                        '<div class="file-info small text-success mb-1">' +
                        '<i class="fas fa-file-upload me-1"></i>' + fileName +
                        '</div>'
                    );
                }
            });
        });
    </script>
}

<style>
    .card {
        border-radius: 0.5rem;
        border: none;
    }

    .card-header {
        border-radius: 0.5rem 0.5rem 0 0 !important;
    }

    .form-control, .form-select {
        border-radius: 0.375rem;
        padding: 0.75rem 1rem;
        transition: all 0.2s ease;
    }

    .form-label {
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .required:after {
        content: " *";
        color: #dc3545;
    }

    .invalid-feedback {
        display: none;
        margin-top: 0.25rem;
        font-size: 0.875em;
    }

    .was-validated .form-control:invalid ~ .invalid-feedback,
    .was-validated .form-select:invalid ~ .invalid-feedback {
        display: block;
    }

    .file-upload-wrapper {
        position: relative;
    }

    .file-info {
        margin-top: 0.25rem;
    }
</style>